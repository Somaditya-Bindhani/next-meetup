{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Documents\\\\Web developemnt\\\\news-next-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport React, { Fragment } from \"react\";\nimport { useRouter } from \"next/router\";\nimport MeetupDeatils from \"../../components/meetups/MeetupDeatils\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport second from 'next';\n\nconst MeetupDetailPage = props => {\n  const router = useRouter();\n  const id = router.query.meetupId;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDeatils, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\"mongodb+srv://somadityaUser:qwerty123@cluster0.dlg8e.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n};\nexport const getStaticProps = async context => {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://somadityaUser:qwerty123@cluster0.dlg8e.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  console.log(selectedMeetup);\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        description: selectedMeetup.description,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image\n      }\n    },\n    revalidate: 1\n  };\n};\nexport default MeetupDetailPage;","map":{"version":3,"sources":["D:/Documents/Web developemnt/news-next-project/pages/[meetupId]/index.js"],"names":["React","Fragment","useRouter","MeetupDeatils","MongoClient","ObjectId","second","MeetupDetailPage","props","router","id","query","meetupId","title","description","meetupData","image","address","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","fallback","paths","map","meetup","params","toString","getStaticProps","context","selectedMeetup","findOne","console","log","revalidate"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport MeetupDeatils from \"../../components/meetups/MeetupDeatils\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\nimport second from 'next'\r\nconst MeetupDetailPage = (props) => {\r\n  const router = useRouter();\r\n  const id = router.query.meetupId;\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>{props.title}</title>\r\n        <meta\r\n          name=\"description\"\r\n          content={props.description}\r\n        />\r\n      </Head>\r\n\r\n      <MeetupDeatils\r\n        image={props.meetupData.image}\r\n        title={props.meetupData.title}\r\n        address={props.meetupData.address}\r\n        description={props.meetupData.description}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\nexport const getStaticPaths = async () => {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://somadityaUser:qwerty123@cluster0.dlg8e.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n};\r\nexport const getStaticProps = async (context) => {\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://somadityaUser:qwerty123@cluster0.dlg8e.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const selectedMeetup = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n  console.log(selectedMeetup);\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: selectedMeetup._id.toString(),\r\n        title: selectedMeetup.title,\r\n        description: selectedMeetup.description,\r\n        address: selectedMeetup.address,\r\n        image: selectedMeetup.image,\r\n      },\r\n    },\r\n    revalidate: 1,\r\n  };\r\n};\r\n\r\nexport default MeetupDetailPage;\r\n"]},"metadata":{},"sourceType":"module"}