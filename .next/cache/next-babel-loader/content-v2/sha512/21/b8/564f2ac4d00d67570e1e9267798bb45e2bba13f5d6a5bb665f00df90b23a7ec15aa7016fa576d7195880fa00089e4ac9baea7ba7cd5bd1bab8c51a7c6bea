{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Documents\\\\Web developemnt\\\\news-next-project\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport MeetupDeatils from \"../../components/meetups/MeetupDeatils\";\n\nvar MeetupDetailPage = function MeetupDetailPage(props) {\n  _s();\n\n  var router = useRouter();\n  var id = router.query.meetupId;\n  return /*#__PURE__*/_jsxDEV(MeetupDeatils, {\n    image: props.image,\n    title: props.ti,\n    address: \"Some street 5,Some city\",\n    description: \"This is the description\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(MeetupDetailPage, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = MeetupDetailPage;\nexport var __N_SSG = true;\nexport default MeetupDetailPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetailPage\");","map":{"version":3,"sources":["D:/Documents/Web developemnt/news-next-project/pages/[meetupId]/index.js"],"names":["React","useRouter","MeetupDeatils","MeetupDetailPage","props","router","id","query","meetupId","image","ti"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,aAAP,MAA0B,wCAA1B;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAY;AAAA;;AACnC,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,MAAMK,EAAE,GAAGD,MAAM,CAACE,KAAP,CAAaC,QAAxB;AACA,sBACE,QAAC,aAAD;AACE,IAAA,KAAK,EAAIJ,KAAK,CAACK,KADjB;AAEE,IAAA,KAAK,EAAEL,KAAK,CAACM,EAFf;AAGE,IAAA,OAAO,EAAC,yBAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CAXD;;GAAMP,gB;UACWF,S;;;KADXE,gB;;AA2CN,eAAeA,gBAAf","sourcesContent":["import React from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport MeetupDeatils from \"../../components/meetups/MeetupDeatils\";\r\nimport { MongoClient } from \"mongodb\";\r\nconst MeetupDetailPage = (props ) => {\r\n  const router = useRouter();\r\n  const id = router.query.meetupId;\r\n  return (\r\n    <MeetupDeatils\r\n      image = {props.image}\r\n      title={props.ti}\r\n      address=\"Some street 5,Some city\"\r\n      description=\"This is the description\"\r\n    />\r\n  );\r\n};\r\nexport const getStaticPaths = async () => {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://somadityaUser:qwerty123@cluster0.dlg8e.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n};\r\nexport const getStaticProps = async (context) => {\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://somadityaUser:qwerty123@cluster0.dlg8e.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const selectedMeetup = await meetupsCollection.findOne({ _id: meetupId });\r\n  console.log(selectedMeetup);\r\n  return {\r\n    props: {\r\n      meetupData: selectedMeetup,\r\n    },\r\n    revalidate: 1,\r\n  };\r\n};\r\n\r\nexport default MeetupDetailPage;\r\n"]},"metadata":{},"sourceType":"module"}